# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod1

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
# Default font:
font pango:monospace 8
# this gives the following error:
# [libi3] ERROR: Could not open font ubuntu mono derivative powerline 8 (X error 15). Trying fallback to 'fixed'.
# font ubuntu mono derivative powerline 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
# bindsym $mod+Return exec i3-sensible-terminal --working-directory="$(cat /tmp/.last_dir_$UID || echo $HOME)"
bindsym $mod+Return exec i3-sensible-terminal -working-directory="/"

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
# bindsym $mod+d exec dmenu_run
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop
#
# Use rofi instead:

set $rofi-bg-color #2f343f
set $rofi-text-color #f3f4f5

# window switcher
bindsym $mod+Tab exec rofi -show window 
bindsym $mod+d exec rofi -show drun 
#-lines 3 -eh 2 -width 100 -padding 200 -fullscreen -opacity "85" -bw 0 -bc "$rofi-bg-color" -bg "$rofi-bg-color" -fg "$rofi-text-color" -hlbg "$rofi-bg-color" -hlfg "#9575cd"

# compton for opacity and transitions on change workspaces
exec compton -f

# Gaps
gaps inner 10
gaps outer 10

#bindsym $mod+Shift+g gaps inner current set 0; gaps outer current set 0
#bindsym $mod+g gaps inner current set 10; gaps outer current set 10
bindsym $mod+g exec sh ~/scripts/toggle_gaps.sh toggle

# Hide title bar
# for_window [class="^.*"] border pixel 1
# new_window 1pixel

set $left h
set $down j
set $up k
set $right l

# change focus
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right

# move workspaces
#bindsym $mod+Shift+Control+$left workspace to output left
#bindsym $mod+Shift+Control+$right move workspace to output right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split toggle in vertical/horizontal orientation
bindsym $mod+v split toggle

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.

#####################
# Workspace variables
#####################
# Names
set $ws1name ""
set $ws2name ""
set $ws3name "3"
set $ws4name ""
set $ws5name ""

# Key bindings
set $ws1key m
set $ws2key comma
set $ws3key period
set $ws4key slash
set $ws5key u

# switch to workspace
bindsym $mod+$ws1key workspace $ws1name
bindsym $mod+$ws2key workspace $ws2name
bindsym $mod+$ws3key workspace $ws3name
bindsym $mod+$ws4key workspace $ws4name
bindsym $mod+$ws5key workspace $ws5name

# move focused container to workspace
bindsym $mod+Shift+$ws1key move container to workspace $ws1name
bindsym $mod+Shift+$ws2key move container to workspace $ws2name
bindsym $mod+Shift+$ws3key move container to workspace $ws3name
bindsym $mod+Shift+$ws4key move container to workspace $ws4name
bindsym $mod+Shift+$ws5key move container to workspace $ws5name

#########################
# Workspace programs init
#########################
# assign [class="^Google-chrome$"] $ws1name
# exec google-chrome
# exec google-chrome --password-store=gnome

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"
bindsym $mod+Shift+Control+w exec "i3-msg exit"

########################
# Background 
# ----------------------
# $ sudo apt install feh
#######################
exec_always feh --bg-scale ~/wallpapers/wallpagper4k_1.png --bg-scale ~/wallpapers/wallpagper4k_2.png

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 1 px or 1 ppt
        bindsym j resize grow height 1 px or 1 ppt
        bindsym k resize shrink height 1 px or 1 ppt
        bindsym l resize grow width 1 px or 1 ppt

        bindsym h+Shift resize shrink width 5 px or 5 ppt
        bindsym j+Shift resize grow height 5 px or 5 ppt
        bindsym k+Shift resize shrink height 5 px or 5 ppt
        bindsym l+Shift resize grow width 5 px or 5 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 1 px or 1 ppt
        bindsym Down resize grow height 1 px or 1 ppt
        bindsym Up resize shrink height 1 px or 1 ppt
        bindsym Right resize grow width 1 px or 1 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

#######################################################################
#
#  MONITORS
# _____________________________________________________________________
#
#  To create a script that do something diff with each params
#
#  eDP-1   laptop
#  DP-1    external monitor
#
# Set external monitor to the left
bindsym $mod+Control+d exec xrandr --output DP-1 --auto --left-of eDP-1
# Remove external monitor
bindsym $mod+Control+Shift+d exec xrandr --output DP-1 --off

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
  status_command i3status
  # status_command sh -c 'i3status | i3status-netusage --interface=em1'
        
  # status_command    python ~/repos/dotfiles/i3/i3pystatus.py
  # workspace_buttons yes
  # position          top

  # Set applets on the primary screen
  tray_output primary
}

# sleep
# bindsym $mod+Control+s exec betterlockscreen -s
bindsym $mod+Control+s exec betterlockscreen -s blur
# lock
bindsym $mod+Control+l exec betterlockscreen -l
# bindsym $mod+Control+l exec i3lock

# To remember the passphrase
# Also you need to add this to: ~/.profile
# 
#   if [ "$0" = "/usr/sbin/lightdm-session" -a "$DESKTOP_SESSION" = "i3" ]; then
#       export $(gnome-keyring-daemon -s)
#   fi
#
exec --no-startup-id /usr/lib/gnome-settings-daemon/gnome-settings-daemon

# 
# Starts the network manager applet
#
exec --no-startup-id nm-applet
# Bluetooth
exec --no-startup-id blueman-applet
exec indicator-sound-switcher

# Increase border
default_border pixel 5
# Hide borders when only one window
hide_edge_borders smart

# Set min and max size for floating windows (i.e: chrome saving/opening files)
floating_minimum_size 500 x 500
floating_maximum_size 2500 x 1500

# set $focused_color "#42adf4"
set $focused_color "#42f4ee"

# Change border color for focus window 
#
# class                 border          backgr. text    indicator child_border
client.focused          focused_color   #285577 #ffffff #2e9ef4   #285577

# Tabs movement
# bindsym $mod+y focus parent; focus left
# bindsym $mod+o focus parent; focus right
